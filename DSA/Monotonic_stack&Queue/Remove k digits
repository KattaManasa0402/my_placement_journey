//This has a lot of edge cases so revise it well!!

class Solution {
public:
    string removeKdigits(string num, int k) {
        stack<char>st;
        string ans="";
        //return "0" if in case k and n value are same 
        //we will end up popping all the stack elements
        if(k==num.size()){
            return "0";
        }
        for(int i=0;i<num.size();i++){
            while(!st.empty() && (st.top()-'0' > num[i]-'0') && k>0){
                st.pop();
                k--;
            }
            st.push(num[i]);
                     
        }
        //remaining elements
        while(k>0){
            st.pop();
            k--;
        }
        if(st.empty()){
            return "0";
        }
        // pop all the stack elements 
        //but u will get it in reversed order
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        //remove leading zeroes
        while(ans.size()!=0 && ans.back()=='0'){
        ans.pop_back();
        }
        //reverse it back 
        reverse(ans.begin(),ans.end());
        if(ans.empty())return "0";
        return ans;
    }
};
