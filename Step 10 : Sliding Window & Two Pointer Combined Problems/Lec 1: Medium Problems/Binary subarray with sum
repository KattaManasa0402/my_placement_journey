class Solution {
public:
int atMost(vector<int>& nums, int goal) {
    //this line make sures if in case the goal is negative , there will not be any subarrays to return
     if (goal < 0) return 0;
        long long sum=0;
        int count=0;
        int l=0;
        int r=0;
        int n=nums.size();
        while(r<n){
            sum+=nums[r];
            while(sum>goal){
                sum-=nums[l];
                l++;
            }
            count=count+(r-l+1);
            r++;
        }
        return count;
}
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        int sol=atMost(nums,goal)-atMost(nums,goal-1);
        return sol;
    }
};
