class Solution {
public:
       int atMost(vector<int>& nums, int k) {
        int l=0;
        int r=0;
        int n=nums.size();
        map<int,int>mpp;
        int count=0;
        while(r<n){
            mpp[nums[r]]+=1;
            while(mpp.size()>k){
                mpp[nums[l]]-=1;
                if(mpp[nums[l]]==0){
                    mpp.erase(nums[l]);
                }
                l++;
            }
            count += r-l+1;
            r++;

        }
        return count;
    }
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        int sol=atMost(nums,k) - atMost(nums,k-1);
        return sol;
    }
};
