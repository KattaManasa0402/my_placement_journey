//Recursive approach without any memoization - we are not storing any value for now , 
//since we have overlapping subproblems so we must save the solutions to these sub problems to avoid re calculation 

int func(int day,int last, vector<vector<int>> &points){
    if(day==0){
        int maxi=0;
        for(int task=0;task<3;task++){
            if(task!=last){
            int point=points[0][task];
            maxi=max(maxi,point);
            }
        }
        return maxi;
    }
    int maxi=0;
    for(int task=0;task<3;task++){
        if(task!=last){
        int point=points[day][task] + func(day-1,task,points);
        maxi=max(maxi,point);
        }
    }
    return maxi;
    
}
int ninjaTraining(int n, vector<vector<int>> &points)
{
    int sol=func(n-1,3,points);
    return sol;
    
}
