class Solution {
public:
    string longestPalindrome(string s) {
        //we put a pointer for each char in the string 
        //start expanding towards the left and right 
        //check until the longest substring is found
        //returning the result
        string res="";
        int resLen=0;
        //for odd plaindrome
        for(int i=0;i<s.size();i++){
            int l=i;
            int r=i;
            while(l>=0 && r<s.size() && s[l]==s[r]){
            if((r-l+1)>resLen){
                //storing in result string
                res=s.substr(l,r-l+1);
                resLen=r-l+1;
            }
                l--;
                r++;
            }
            l=i;
            r=i+1;
            while(l>=0 && r<s.size() && s[l]==s[r]){
            if((r-l+1)>resLen){
                //storing in result string
                res=s.substr(l,r-l+1);
                resLen=r-l+1;
            }
                 l--;
                r++;
            }
            
        }
        return res;
    }
};
