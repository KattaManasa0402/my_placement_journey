class Solution {
public:
    int beautySum(string s) {
        int ans=0;
        for(int i=0;i<s.size();i++){
            //the reason we are initialising our mpp here 
            //because for each new substring , we have recalculate the values
            map<char,int>mpp;
            for(int j=i;j<s.size();j++){
                //for each char - increment its frequency
                mpp[s[j]]+=1;
                //initialize most_frequent and least_frequent
                int mf=INT_MIN;
                int lf=INT_MAX;
                for(auto it:mpp){
                    //find out the mf,lf in your hashmap
                    mf=max(mf,it.second);
                    lf=min(lf,it.second);
                }
                //keep adding the beauty of each substring in your answer variable
                ans+=mf-lf;
            }
        }
        return ans;
    }
};
